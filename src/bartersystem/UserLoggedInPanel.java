/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package bartersystem;

import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JList;
import javax.swing.JOptionPane;

/**
 *
 * @author Sumeet
 */
public class UserLoggedInPanel extends javax.swing.JPanel {

    ProgramFrame programFrame;
    UserDatabaseAccess userAccess;
    UserInfo user;
    
    String product_name,product_type,description,expectation;
    File imageFile = new File("C:/Users/aditya_alpha/Pictures/blank.png");
    int quantity,user_id;
    ImageIcon icon;
    
    
    String jItemSearch;
    /**
     * Creates new programFrame NewJPanel
     * @param programFrame
     * @param user
     */
    
    public UserLoggedInPanel(final ProgramFrame programFrame, final UserInfo user) {
        this.programFrame = programFrame;
        this.user = user;
        userAccess = new UserDatabaseAccess();
        icon = createImageIcon("images/blank.png","");
        Image scaleImage = icon.getImage().getScaledInstance(160, 180,Image.SCALE_DEFAULT);
        icon.setImage(scaleImage);
        initComponents();
        
        jLoggedInAs.setText("LOGGED IN AS " + user.getName());
        jList1.clearSelection();
        jList1.setListData(userAccess.getUserItems(user.getId()));
        
        jList1.addMouseListener(new MouseAdapter() {
        public void mouseClicked(MouseEvent evt) {
        JList list = (JList)evt.getSource();
        if (evt.getClickCount() == 2) {
            int productIndex = userAccess.getProductId(list.getSelectedIndex(),user.getId());
            JOptionPane.showMessageDialog(null,new ProductDetailPanel(programFrame,productIndex,user.getId()),"Information",JOptionPane.INFORMATION_MESSAGE);
            refreshList();
        }
        
        }
        });
        
        jList2.clearSelection();
        jItemSearch = jCategoryDropDown.getSelectedItem().toString();
        
        jList2.setListData(userAccess.getUserSearch(jItemSearch,user.getId()));
        
        jList2.addMouseListener(new MouseAdapter() {
        public void mouseClicked(MouseEvent evt) {
        JList list = (JList)evt.getSource();
        if (evt.getClickCount() == 2) {
            int productIndex = userAccess.getProductSearchId(list.getSelectedIndex());
            int traderIndex = userAccess.getUserId(productIndex);
            JOptionPane.showMessageDialog(null,new ProductTradeDetailPanel(programFrame,productIndex,traderIndex,user.getId()),"Product Info",JOptionPane.PLAIN_MESSAGE);
            refreshList();
        }
        
        }
        });
        
        
        
        jNotificationList.clearSelection();
        
        jNotificationList.setListData(userAccess.getNotifications(user.getId()));
        
        jNotificationList.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseClicked(MouseEvent evt) {
        JList list = (JList)evt.getSource();
        if (evt.getClickCount() == 2) {
            int notIndex = userAccess.getNotificationIndex(list.getSelectedIndex());
            int userProductIndex = userAccess.getProductFromNotification(notIndex);
            int traderIndex = userAccess.getTraderFromNotification(notIndex);
            int traderProductIndex = userAccess.getOfferedProductFromNotification(notIndex);
            JOptionPane.showMessageDialog(null,new ProductConfirmTrade(programFrame,userProductIndex,traderProductIndex,user.getId(),traderIndex),"Trade Info",JOptionPane.PLAIN_MESSAGE);
            refreshList();
        }
        
        }
        });
        
        jList3.clearSelection();
        
        jList3.setListData(userAccess.getTrades(user.getId()));
        
        jList3.addMouseListener(new MouseAdapter() {
        public void mouseClicked(MouseEvent evt) {
        JList list = (JList)evt.getSource();
        if (evt.getClickCount() == 2) {
            int tradeIndex = userAccess.getTradeIndex(list.getSelectedIndex());
            JOptionPane.showMessageDialog(null,new ProductExchangedPanel(tradeIndex),"Exchange Info",JOptionPane.PLAIN_MESSAGE);
        }
        
        }
        });
       
        
    }

    /**
     * This method is called from within the constructor to initialize the programFrame.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jProductNameText = new javax.swing.JLabel();
        jProductTypeText = new javax.swing.JLabel();
        jProductTypeDrop = new javax.swing.JComboBox();
        jProductNameField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jProductDescriptionText = new javax.swing.JLabel();
        jAddItem = new javax.swing.JButton();
        jYourItemsText = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jProductDescription = new javax.swing.JTextArea();
        jQuantity = new javax.swing.JLabel();
        jQuantityField = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jExpectationArea = new javax.swing.JTextArea();
        jUpload = new javax.swing.JButton();
        jImageLabel = new javax.swing.JLabel(icon);
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jCategoryText = new javax.swing.JLabel();
        jCategoryDropDown = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jNotificationList = new javax.swing.JList();
        jClearNots = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList();
        jClearButton = new javax.swing.JButton();
        logoutButton = new javax.swing.JButton();
        jLoggedInAs = new javax.swing.JLabel();

        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.addChoosableFileFilter(new ImageFilter());

        setPreferredSize(new java.awt.Dimension(400, 300));

        jProductNameText.setText("Product Name");

        jProductTypeText.setText("Product Type:");

        jProductTypeDrop.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Books", "Gadgets", "Multimedia", "Other" }));
        jProductTypeDrop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jProductTypeDropActionPerformed(evt);
            }
        });

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jProductDescriptionText.setText("Product Description :");

        jAddItem.setText("Add Item");
        jAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddItemActionPerformed(evt);
            }
        });

        jYourItemsText.setText("Your Items:");

        jProductDescription.setColumns(20);
        jProductDescription.setRows(5);
        jScrollPane2.setViewportView(jProductDescription);

        jQuantity.setText("Qty:");

        jQuantityField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        jLabel1.setText("Expectations :");

        jExpectationArea.setColumns(20);
        jExpectationArea.setRows(5);
        jScrollPane5.setViewportView(jExpectationArea);

        jUpload.setText("Upload Image");
        jUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUploadActionPerformed(evt);
            }
        });

        jImageLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jProductNameText)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jProductNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jProductDescriptionText)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jProductTypeText)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jProductTypeDrop, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(jQuantity)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jQuantityField, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                                    .addComponent(jScrollPane5))
                                .addGap(23, 23, 23)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addComponent(jUpload))
                                    .addComponent(jImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(184, 184, 184)
                        .addComponent(jAddItem, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                        .addComponent(jYourItemsText)
                        .addGap(80, 80, 80))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(49, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jProductNameText)
                    .addComponent(jProductNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jYourItemsText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jProductTypeText)
                            .addComponent(jProductTypeDrop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jQuantity)
                            .addComponent(jQuantityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addComponent(jProductDescriptionText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jUpload)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jAddItem))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Add An Item", jPanel1);

        jList2.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jList2);

        jCategoryText.setText("Category :");

        jCategoryDropDown.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Books", "Gadgets", "Multimedia", "Other" }));
        jCategoryDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCategoryDropDownActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jCategoryText)
                .addGap(18, 18, 18)
                .addComponent(jCategoryDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 197, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jCategoryText)
                        .addComponent(jCategoryDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Search For An Item", jPanel2);

        jNotificationList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(jNotificationList);

        jClearNots.setText("Clear Notifications");
        jClearNots.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jClearNotsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 635, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(245, 245, 245)
                .addComponent(jClearNots, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jClearNots)
                .addGap(0, 30, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Notifications", jPanel3);

        jList3.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane6.setViewportView(jList3);

        jClearButton.setText("Clear");
        jClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jClearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 635, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(244, 244, 244)
                .addComponent(jClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jClearButton)
                .addGap(0, 30, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Trade Negotiations", jPanel4);

        logoutButton.setText("logout");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        jLoggedInAs.setText("LOGGED IN AS");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLoggedInAs)
                .addGap(32, 32, 32)
                .addComponent(logoutButton)
                .addGap(239, 239, 239))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLoggedInAs)
                    .addComponent(logoutButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        // TODO add your handling code here:
        backToMain();
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void jAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddItemActionPerformed
        try {
            // TODO add your handling code here:
            saveProduct();
        } catch (IOException ex) {
            Logger.getLogger(UserLoggedInPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_jAddItemActionPerformed

    private void jCategoryDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCategoryDropDownActionPerformed
        // TODO add your handling code here:
        searchItemType();
    }//GEN-LAST:event_jCategoryDropDownActionPerformed

    private void jProductTypeDropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jProductTypeDropActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jProductTypeDropActionPerformed

    private void jClearNotsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jClearNotsActionPerformed
        // TODO add your handling code here:
        userAccess.ClearNotifications(user.getId());
        refreshList();
    }//GEN-LAST:event_jClearNotsActionPerformed

    private void jUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUploadActionPerformed
        try {
            // TODO add your handling code here:
            uploadImage();
        } catch (IOException ex) {
            Logger.getLogger(UserLoggedInPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jUploadActionPerformed

    private void jClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jClearButtonActionPerformed
        // TODO add your handling code here:
        userAccess.ClearTrades(user.getId());
        refreshList();
    }//GEN-LAST:event_jClearButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JButton jAddItem;
    private javax.swing.JComboBox jCategoryDropDown;
    private javax.swing.JLabel jCategoryText;
    private javax.swing.JButton jClearButton;
    private javax.swing.JButton jClearNots;
    private javax.swing.JTextArea jExpectationArea;
    private javax.swing.JLabel jImageLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JList jList3;
    private javax.swing.JLabel jLoggedInAs;
    private javax.swing.JList jNotificationList;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextArea jProductDescription;
    private javax.swing.JLabel jProductDescriptionText;
    private javax.swing.JTextField jProductNameField;
    private javax.swing.JLabel jProductNameText;
    private javax.swing.JComboBox jProductTypeDrop;
    private javax.swing.JLabel jProductTypeText;
    private javax.swing.JLabel jQuantity;
    private javax.swing.JFormattedTextField jQuantityField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jUpload;
    private javax.swing.JLabel jYourItemsText;
    private javax.swing.JButton logoutButton;
    // End of variables declaration//GEN-END:variables

    private void backToMain() {
                            programFrame.getContentPane().removeAll();
                            programFrame.setContentPane(new LoginRegisterPanel(programFrame));
                            ((JComponent) programFrame.getContentPane()).revalidate();
                            programFrame.repaint();
    }

    private void saveProduct() throws IOException {
                product_name = jProductNameField.getText();
		
		product_type = jProductTypeDrop.getSelectedItem().toString();
                quantity = Integer.parseInt(jQuantityField.getText());
                user_id = user.getId();
                description = jProductDescription.getText();
                expectation = jExpectationArea.getText();
                
		if (product_name.equals("")) {
			JOptionPane.showMessageDialog(null,
					"Please enter product name.");
		} else {
                    
                    
			//create a ProductInfo object and pass it to UserDatabaseAccess to save it
			ProductInfo product = new ProductInfo(user_id, product_name, product_type, quantity, description
                        ,expectation,imageFile);
                        boolean validation = userAccess.saveProduct(product);
                        if(validation){
                            
                            JOptionPane.showMessageDialog(null, "Product Added");
                            clear();
                        }
                        else{
                            
                        }
                        
		}
                refreshList();
    }
    
    public void clear() {
        
		jProductNameField.setText("");
		jProductDescription.setText("");
                jQuantityField.setText("");
                jExpectationArea.setText("");
                icon = createImageIcon("images/blank.png","");
                Image scaleImage = icon.getImage().getScaledInstance(160, 180, Image.SCALE_DEFAULT);
                icon.setImage(scaleImage);
                jImageLabel.setIcon(icon);
                
    }
    
    void refreshList(){
                jList1.clearSelection();
                jList1.setListData(userAccess.getUserItems(user.getId()));
                jNotificationList.clearSelection();
                jNotificationList.setListData(userAccess.getNotifications(user.getId()));
                jList3.clearSelection();
                jList3.setListData(userAccess.getTrades(user.getId()));
                
    }

    private void searchItemType() {
        
        jList2.clearSelection();
        
        jItemSearch = jCategoryDropDown.getSelectedItem().toString();
        
        jList2.setListData(userAccess.getUserSearch(jItemSearch,user.getId()));
        
    }

    private void uploadImage() throws IOException {
        // TODO add your handling code here:
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == fileChooser.APPROVE_OPTION) {
       
          imageFile = fileChooser.getSelectedFile();
          System.out.println(fileChooser.getSelectedFile());
          BufferedImage bi;
          bi=ImageIO.read(imageFile);
          icon = new ImageIcon(bi);
          Image scaleImage = icon.getImage().getScaledInstance(160, 180, Image.SCALE_DEFAULT);
          icon.setImage(scaleImage);
          jImageLabel.setIcon(icon);
        }
        else {
            
        System.out.println("File access cancelled by user.");
        }
    }
    
    
    protected ImageIcon createImageIcon(String path,
                                           String description) {
    java.net.URL imgURL = getClass().getResource(path);
    if (imgURL != null) {
        return new ImageIcon(imgURL, description);
    } else {
        System.err.println("Couldn't find file: " + path);
        return null;
    }
}
}
    
    

